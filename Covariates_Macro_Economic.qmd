---
title: "Macro-economic CoVariates for SWAP Regression"
author: "Zehaan Naik"
format: html
editor: visual
---

# Obtaining necessary Covariates for SWAP analysis

To obtain a decent pair of covariates that have the property of Bi-directional causality both mathematically and logically, so that they fit well into the paradigm of SWAP.

For this I consider the Top 50 Macroeconomic Indicators of the Indian Economy, made public by the Reserve Bank of India. These parameters have a natural and intuitive correlation between them that can easily be tested.

Consider the following two variables:

```{r}

# Necessary Libraries
library(dplyr)
library(readxl)
dat <- read_xlsx("50 Macroeconomic Indicators.xlsx", sheet = 3)

# Choosing Two parameters
my.dat <- dat[,c(5,19)]
names <- my.dat[2,]
my.dat <- my.dat[-(1:4),]
colnames(my.dat) <- c("Consumer Price for Agricultural Labourer", "Total Retail Payments (in Crores)")
my.dat <- apply(my.dat, 2, as.numeric)

# Cleaning the Data
my.dat <- as_tibble(my.dat)
my.dat <- my.dat%>%
  filter(!is.na(`Total Retail Payments (in Crores)`))


head(my.dat)
```

## Causality Analysis

We can look at the causal model, i.e. $Y_t = \beta_0 + X_t\tilde\beta_1 + Y_{t-1}\beta_2 + \epsilon$ where $\epsilon \sim N(0,1)$.

```{r}
# Plotting the causal model 
Y <- my.dat$`Consumer Price for Agricultural Labourer`
X <- my.dat$`Total Retail Payments (in Crores)`
Y.lag1 <- c(0,Y[1:length(Y)-1])
Y <- Y[2:length(Y)]
X <- X[2:length(X)]
Y.lag1 <- Y.lag1[2:length(Y.lag1)]
causal.model <- lm(Y~X+Y.lag1)
causal.model$coefficients
plot(causal.model$residuals)
summary(causal.model)
```

We observe that the co-efficient for $X_t$ is not significant. Hence, $X_t$ is **not** causal.

With these values of the parameter, we can successfully reject the hypothesis and hence can conclude that $X$ **is NOT CAUSAL for** $Y$**. (1)**

## USD-INR vs. Sensex

The following data is sourced from [`source`](https://www.kaggle.com/datasets/somyaagarwal69/gold-forecasting?resource=download).

```{r}
dat.gold <- read.csv("GoldUP.csv")
cor(dat.gold$USD_INR,dat.gold$Sensex)

plot.ts(dat.gold$USD_INR, main = "USD-INR Index")
plot.ts(dat.gold$Sensex, main = "Sensex")

# Preparing the data
Y <- dat.gold$USD_INR
X <- dat.gold$Sensex
Y.lag1 <- lag(Y)
X.lag1 <- lag(X)
Y <- Y[2:length(Y)]
X <- X[2:length(X)]
Y.lag1 <- Y.lag1[2:length(Y.lag1)]
X.lag1 <- X.lag1[2:length(X.lag1)]

## Direction 1 
m1 <- lm(Y~X+Y.lag1)
summary(m1)

# Directrion 2
m2 <- lm(X~Y+X.lag1)
summary(m2)

# ANOVA
anova(m1,m2)
```

Here, we observe that $X$ is causal for $Y$ but not the other way round. This goes to show that the USD-INR index affect Sensex but not the other way round.

The logical explanation between the inherent relationship is explored in finance literature very often. One example that I can cite here would be **Batra, V., Kandpal, D. and Sinha, R., \[2020\].** \[Relationship between exchange rate (usd/inr) and stock market indices in India (sensex)\]

We can observe the same from the residuals below.

```{r}
plot(m1$residuals)
plot(m2$residuals)
```

## Consumer Price Index vs. Sensex

```{r}

cor(dat.gold$CPI,dat.gold$Sensex)

plot.ts(dat.gold$CPI, main = "Consumer Price Index")
plot.ts(dat.gold$Sensex, main = "Sensex")

# Preparing the data
Y <- dat.gold$CPI
X <- dat.gold$Sensex
Y.lag1 <- lag(Y)
X.lag1 <- lag(X)
Y <- Y[2:length(Y)]
X <- X[2:length(X)]
Y.lag1 <- Y.lag1[2:length(Y.lag1)]
X.lag1 <- X.lag1[2:length(X.lag1)]

## Direction 1 
m1 <- lm(Y~X+Y.lag1)
summary(m1)

# Directrion 2
m2 <- lm(X~Y+X.lag1)
summary(m2)
```

Finally for this model we can observe a bi-directional causality going from $X \rightarrow Y$ and $Y \rightarrow X$. This is exactly what we need to fit the data in the SWAP paradigm and best model the trend.

## Looking at the data

```{r}

# Preparing the data
Y <- dat.gold$Sensex
X <- dat.gold$CPI

# Observing the data
plot(X,Y)

# A simple linear model 
m1 <- lm(Y~X)
plot(X,Y)
lines(X,m1$fitted.values, col = "tomato")

## Residual Analysis
plot(m1$residuals)
# We still observe some trend here so the fit is not ideal

# A quadratic fit
X2 <- X^2
m2 <- lm(Y~X+X2)
plot(X,Y)
lines(X,cbind(1,X,X2)%*%m2$coefficients, col = "tomato")

## Residual Analysis
plot(m2$residuals)
```

## Test for Homoscedasticity

```{r}
library(car)
ncvTest(m1)

ncvTest(m2)
```

## SWAP Regression

From observing the residual plots we can clearly see that we need a better model to fit the data that we have on our hands.

We try the SWAP paradigm on this data set considering some natural breaking points.

```{r}

plot(X,Y)

# part - 1
X1 <- X[which(X<90)]
Y1 <- Y[which(X<90)]
m1 <- lm(Y1~X1)

# part -2
X2 <- X[which(X>=90)]
Y2 <- Y[which(X>=90)]
m2 <- lm(Y2~X2)

lines(X1,m1$fitted.values, col = "skyblue")
lines(X2,m2$fitted.values, col = "coral")
```

Now we try to fit the SWAP model on the data

To try and identify a few break points, we perform unit-root and ADF test on the data.

```{r}
library(tseries)

adf.test(Y)
```

This shows that our hypothesis is accepted, in other words, $Y$ is not stationary.

Running the SWAP model.

```{r}

# Model ax^2 + bx + c = 0
a = 0
b = 0
c = 1

der_a <- function(X,Y,a,b,c){
  loss <- (Y-(a*X^2 + b*X + c))*(-2*X^2)
  return(sum(loss)/length(X))
}
der_b <- function(X,Y,a,b,c){
  loss <- (Y-(a*X^2 + b*X + c))*(-2*X)
  return(sum(loss)/length(X))
}
der_c <- function(X,Y,a,b,c){
  loss <- (Y-(a*X^2 + b*X + c))*(-2)
  return(sum(loss)/length(X))
}

# part - 1
X1 <- X[which(X<90)]
Y1 <- Y[which(X<90)]
n = 10000
lr = 1e-8
for(i in 1:n){
  a_n <- a - lr*der_a(X1,Y1,a,b,c)
  b_n <- b - lr*der_b(X1,Y1,a,b,c)
  c_n <- c - lr*der_c(X1,Y1,a,b,c)
  a <- a_n
  b <- b_n
  c <- c_n
}

py <- a*X^2 + b*X + c

plot(X,Y)
lines(X,py,col = "red")
print(paste("a = ",a,"b = ",b,"c = ",c))

# part -2
der_inv_a <- function(X,Y,a,b,c){
  loss <- (X - (-b/(2*a) + sqrt(b^2 - 4*a*(c-Y))/(2*a)))*(b - 2*a*(c-Y)/sqrt(b^2 - 4*a*(c-Y)) - sqrt(b^2 - 4*a*(c-Y)))/(2*a^2)
  return(sum(loss)/length(X))
}
der_inv_b <- function(X,Y,a,b,c){
  loss <- (X - (-b/(2*a) + sqrt(b^2 - 4*a*(c-Y))/(2*a)))*(b/sqrt(b^2 - 4*a*(c-Y)) - 1)/(2*a)
  return(sum(loss)/length(X))
}
der_inv_c <- function(X,Y,a,b,c){
  loss <- (Y-(a*X^2 + b*X + c))*(-2/sqrt(b^2 - 4*a*(c-Y)))
  return(sum(loss)/length(X))
}

X2 <- X[which(X>=90)]
Y2 <- Y[which(X>=90)]

for(i in 1:n){
  a_n <- a - lr*der_inv_a(X2,Y2,a,b,c)
  b_n <- b - lr*der_inv_b(X2,Y2,a,b,c)
  c_n <- c - lr*der_inv_c(X2,Y2,a,b,c)
  a <- a_n
  b <- b_n
  c <- c_n
}


p2y <- a*X^2 + b*X + c

plot(X,Y)
lines(X,py,col = "red")
lines(X,p2y,col = "blue")
print(paste("a = ",a,"b = ",b,"c = ",c))
```

Residual Analysis

```{r}
plot(Y-p2y)
```
